; Name:     ExtractClasses.pip
; Template: s
; Prompt:   <namespace>
;
; This pipe takes as input text, all of the classes within a namespace, and translates 
; each class into a Bash command that when run, creates a .CS file having the name of
; that class containing the class text enclosed inside the provided namespace.  In other
; words, this pipe translates a .CS files having many classes into many .CS files, each
; having one class.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Remove any trailing blanks, left-margin commented lines and any extraneous blank lines:

TrimLinesRight
ExclLines '//' 1 2
DelExtraBlankLines

; Translate each class into a Bash command that when run will isolate that class into its own file:

AppendStr ' <EoL>'
JoinLines
ReplStr ' <EoL>   } <EoL> <EoL>' ' <EoL>   } <EoL> <EoL>\e'
AppendStr '<EoT>'
ReplStr ' <EoL><EoT>' '<EoT>' ' <EoL><EoT>' '' '<EoT>' ''
ReplStr '"' '&quot;' '!' '&excl;' '\\' '&backs;'
InsStr 1 'echo "using System; <EoL> <EoL>namespace [1] <EoL>{ <EoL>'
AppendStr ' <EoL>}" | pcl "ReplStr '' <EoL>'' ''\\e'' ''&excl;'' ''\\!'' ''&backs;'' ''\\\\\\\\'' ''&quot;'' ''\\\"''" ><TheOutputFile>.cs'

; For each line, replace the output file placeholder with the name of the actual .CS file being written to:

InsStr 1 '<BoT>' 
RotCharsToStr '\\sclass\\s\\w+' /r
RotCharsLeft 1
RotCharsToStr ' '
RotCharsLeft 1
ReplStr '<TheOutputFile>' '%' /b1 /d' ' 
RotCharsToStr '<BoT>'
DelChars 1 5
