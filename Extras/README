PipeWrench is a high-level text scripting tool that allows you to easily transform text, (i.e. lists, command output, HTML, config files, log files, source code, CSV data, etc.) from one form to another with relative ease. In a PipeWrench script, there's no need to create conditional or looping constructs or even to declare variables. You simply "stack" filters to get the results you want. And when you're done building your "pipe script" using PipeWrench's editor, you can export it for use at the command line (or in shell scripts). Thanks to it's rich set of core filters, PipeWrench makes it possible to do things you never dreamed could be done with just a pipe. PipeWrench can be run on both Windows and Linux platforms. It includes a pipe editor GUI as well as a CLI-based tool. 


FEATURES

   - runs on both Windows and Linux platforms
   - employs a rich set of 60+ text filters
   - pipes can be constructed and debugged using PipeWrench’s GUI application
   - pipes can be run from the PipeWrench GUI, the terminal or from shell scripts
   - pipes can be “called” with arguments passed to them
   - a pipe’s effects can be constrained to only a portion of the input text
   - new filters can be added via plugins


LIMITATIONS

Like all software solutions, PipeWrench has its limits. The very design that makes PipeWrench a capable tool for cranking out solutions to many everyday text processing problems also limits its range of applications. For one thing, PipeWrench is only designed to process text. It isn’t designed to handle binary content. PipeWrench expects its input to be formatted as lines of text; each line terminated by a “newline”. In addition, PipeWrench is limited to working with just the amount of text that it can hold in memory at one time and it isn’t intended for use in applications that require handling of more text than this. If you require such capability you may want to consider other available solutions.


DOCUMENTATION

For complete documentation, see the PipeWrench user guide. For additional in-depth examples illustrating PipeWrench's capabilities, see the demos included with PipeWrench.[1]


BUILDING AND EXECUTING PIPEWRENCH

Windows users can compile PipeWrench using either Visual Studio or the open source alternative, Monodevelop. Once compiled, you should be able to execute the GUI application from the IDE or by running its executable (PipeWrench.exe) directly from the "bin/Debug" or "bin/Release" folders (depending on which build profile was used to compile PipeWrench). The CLI application (PCL.exe) can be run from a command (terminal) window. If you want the ability to run either executable from anywhere on your computer, then simply ensure that the folder containing the PipeWrench executables is included in your system's PATH variable.  

If you're using Linux, you can compile PipeWrench using Monodevelop. Once compiled, you should be able to execute the GUI application either from the Monodevelop IDE or from inside a terminal by typing "mono PipeWrench.exe" from either the "bin/Debug" or "bin/Release" folders (depending on which build profile was used to compile PipeWrench). The CLI application (PCL.exe) can also be run from a terminal by using mono. To make executing either application more practical, you may want to create a couple of shell scripts ("pipewrench" and "pcl") and place them into a folder searched by your system's PATH variable:

   #!/bin/sh
   mono "<binaries path>/PipeWrench.exe" "$@"

   #!/bin/sh
   mono "<binaries path>/PCL.exe" "$@"

Just be sure to replace "<binaries path>" with the actual path. Note: In the near future, a Ubuntu PPA will be set up on launchpad.net for allowing you to install PipeWrench. 


Send any questions or suggestions to "bwb@fireflysoftware.com".

PipeWrench is licensed under the GPL. See "http://www.gnu.org/licenses" for details.

______

[1] Local resources such as the included demos and the user guide are not automatically accessible from the GUI's "help" menu. For these to be accessible from the GUI, a shortcut (or "symlink" in Linux) to these must be placed in the same folder where the PipeWrench executables reside.  Likewise, the single supplied plug-in dll, "SamplePlugin"--included only for its "SampleFilter" filter--will work only if it is located in a subfolder (of the executables folder) called "PlugIns".  

