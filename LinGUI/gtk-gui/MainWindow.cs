
// This file has been generated by the GUI designer. Do not modify.
public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action FileAction;
	private global::Gtk.Action NewAction;
	private global::Gtk.Action OpenAction;
	private global::Gtk.Action SaveAction;
	private global::Gtk.Action SaveAsAction;
	private global::Gtk.Action ImportAction;
	private global::Gtk.Action ExportAction;
	private global::Gtk.Action ExitAction;
	private global::Gtk.Action EditAction;
	private global::Gtk.Action CutAction;
	private global::Gtk.Action CopyAction;
	private global::Gtk.Action PasteAction;
	private global::Gtk.Action DeleteAction;
	private global::Gtk.Action SelectAllAction;
	private global::Gtk.Action PreferencesAction;
	private global::Gtk.Action PipeAction;
	private global::Gtk.Action RunAction;
	private global::Gtk.Action RunToLineAction;
	private global::Gtk.Action HelpAction;
	private global::Gtk.Action UserGuideAction;
	private global::Gtk.Action SupportForumAction;
	private global::Gtk.Action VisitOurHomepageAction;
	private global::Gtk.Action AboutAction;
	private global::Gtk.Action QuickStartTutorialAction;
	private global::Gtk.Action FontAction;
	private global::Gtk.Action AppendStrAction;
	private global::Gtk.Action BottomLinesAction;
	private global::Gtk.Action CallAction;
	private global::Gtk.Action CountCharsAction;
	private global::Gtk.Action CountLinesAction;
	private global::Gtk.Action DelBlankLinesAction;
	private global::Gtk.Action DelCharsAction;
	private global::Gtk.Action ExclLinesAction;
	private global::Gtk.Action InclLinesAction;
	private global::Gtk.Action InsLineNoAction;
	private global::Gtk.Action InsStrAction;
	private global::Gtk.ToggleAction WrapTextAction;
	private global::Gtk.Action InsertCursorColAction;
	private global::Gtk.Action DemosAction;
	private global::Gtk.VBox vbox1;
	private global::Gtk.MenuBar menubar1;
	private global::Gtk.Toolbar toolbar1;
	private global::Gtk.HPaned hpaned1;
	private global::Gtk.Frame CommandsFrame;
	private global::Gtk.Alignment GtkAlignment;
	private global::Gtk.ScrolledWindow scrolledwindow1;
	private global::Gtk.Toolbar CommandsToolbar;
	private global::Gtk.Label GtkLabel6;
	private global::Gtk.VPaned vpaned1;
	private global::Gtk.Frame PipeFrame;
	private global::Gtk.Alignment GtkAlignment2;
	private global::Gtk.VBox vbox3;
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	private global::Gtk.TextView PipeTextView;
	private global::Gtk.HBox hbox1;
	private global::Gtk.Label label1;
	private global::Gtk.Entry ArgsEntry;
	private global::Gtk.Label GtkLabel10;
	private global::Gtk.Frame TextFrame;
	private global::Gtk.Alignment GtkAlignment1;
	private global::Gtk.Notebook TextNotebook;
	private global::Gtk.VBox vbox2;
	private global::Gtk.ScrolledWindow GtkScrolledWindow1;
	private global::Gtk.TextView InputTextView;
	private global::Gtk.HBox hbox2;
	private global::Gtk.Label label2;
	private global::Gtk.Entry InputFileEntry;
	private global::Gtk.Button InputFileBrowseButton;
	private global::Gtk.Button InputFileClearButton;
	private global::Gtk.VBox vbox4;
	private global::Gtk.ScrolledWindow GtkScrolledWindow2;
	private global::Gtk.TextView OutputTextView;
	private global::Gtk.HBox hbox3;
	private global::Gtk.Label label3;
	private global::Gtk.Entry OutputFileEntry;
	private global::Gtk.Button OutputFileBrowseButton;
	private global::Gtk.Button OutputFileClearButton;
	private global::Gtk.ScrolledWindow GtkScrolledWindow3;
	private global::Gtk.TextView ErrorsTextView;
	private global::Gtk.Label GtkLabel14;
	private global::Gtk.Statusbar TheStatusBar;
	private global::Gtk.Label StatusBarCursorPosLabel;
	private global::Gtk.VSeparator vseparator1;
	private global::Gtk.Label StatusBarTextLabel;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("_File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_File");
		w1.Add (this.FileAction, null);
		this.NewAction = new global::Gtk.Action ("NewAction", global::Mono.Unix.Catalog.GetString ("_New"), global::Mono.Unix.Catalog.GetString ("Creates new pipe"), "gtk-new");
		this.NewAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_New");
		w1.Add (this.NewAction, "<Control>n");
		this.OpenAction = new global::Gtk.Action ("OpenAction", global::Mono.Unix.Catalog.GetString ("_Open"), global::Mono.Unix.Catalog.GetString ("Opens existing pipe"), "gtk-open");
		this.OpenAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Open");
		w1.Add (this.OpenAction, "<Control>o");
		this.SaveAction = new global::Gtk.Action ("SaveAction", global::Mono.Unix.Catalog.GetString ("_Save"), global::Mono.Unix.Catalog.GetString ("Saves pipe"), "gtk-floppy");
		this.SaveAction.Sensitive = false;
		this.SaveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Save");
		w1.Add (this.SaveAction, "<Control>s");
		this.SaveAsAction = new global::Gtk.Action ("SaveAsAction", global::Mono.Unix.Catalog.GetString ("Save _As"), global::Mono.Unix.Catalog.GetString ("Saves pipe as new file"), "gtk-save-as");
		this.SaveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save _As");
		w1.Add (this.SaveAsAction, "<Control>q");
		this.ImportAction = new global::Gtk.Action ("ImportAction", global::Mono.Unix.Catalog.GetString ("_Import"), global::Mono.Unix.Catalog.GetString ("Imports PCL formatted pipe from the clipboard"), "gtk-go-down");
		this.ImportAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Import");
		w1.Add (this.ImportAction, null);
		this.ExportAction = new global::Gtk.Action ("ExportAction", global::Mono.Unix.Catalog.GetString ("_Export"), global::Mono.Unix.Catalog.GetString ("Exports PCL formatted pipe to the clipboard"), "gtk-go-up");
		this.ExportAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Export");
		w1.Add (this.ExportAction, null);
		this.ExitAction = new global::Gtk.Action ("ExitAction", global::Mono.Unix.Catalog.GetString ("E_xit"), global::Mono.Unix.Catalog.GetString ("Quits application"), "gtk-quit");
		this.ExitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("E_xit");
		w1.Add (this.ExitAction, null);
		this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("_Edit"), null, null);
		this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Edit");
		w1.Add (this.EditAction, null);
		this.CutAction = new global::Gtk.Action ("CutAction", global::Mono.Unix.Catalog.GetString ("Cu_t"), null, "gtk-cut");
		this.CutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Cu_t");
		w1.Add (this.CutAction, "<Control>x");
		this.CopyAction = new global::Gtk.Action ("CopyAction", global::Mono.Unix.Catalog.GetString ("_Copy"), null, "gtk-copy");
		this.CopyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Copy");
		w1.Add (this.CopyAction, "<Control>c");
		this.PasteAction = new global::Gtk.Action ("PasteAction", global::Mono.Unix.Catalog.GetString ("_Paste"), null, "gtk-paste");
		this.PasteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Paste");
		w1.Add (this.PasteAction, "<Control>v");
		this.DeleteAction = new global::Gtk.Action ("DeleteAction", global::Mono.Unix.Catalog.GetString ("_Delete"), null, "gtk-delete");
		this.DeleteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Delete");
		w1.Add (this.DeleteAction, null);
		this.SelectAllAction = new global::Gtk.Action ("SelectAllAction", global::Mono.Unix.Catalog.GetString ("Select _All"), null, "gtk-select-all");
		this.SelectAllAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Select _All");
		w1.Add (this.SelectAllAction, "<Control>a");
		this.PreferencesAction = new global::Gtk.Action ("PreferencesAction", global::Mono.Unix.Catalog.GetString ("Prefere_nces"), null, "gtk-preferences");
		this.PreferencesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Prefere_nces");
		w1.Add (this.PreferencesAction, null);
		this.PipeAction = new global::Gtk.Action ("PipeAction", global::Mono.Unix.Catalog.GetString ("_Pipe"), null, null);
		this.PipeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Pipe");
		w1.Add (this.PipeAction, null);
		this.RunAction = new global::Gtk.Action ("RunAction", global::Mono.Unix.Catalog.GetString ("_Run"), global::Mono.Unix.Catalog.GetString ("Runs entire pipe"), "gtk-media-play");
		this.RunAction.Sensitive = false;
		this.RunAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Run");
		w1.Add (this.RunAction, "<Control>r");
		this.RunToLineAction = new global::Gtk.Action ("RunToLineAction", global::Mono.Unix.Catalog.GetString ("Run _To Line"), global::Mono.Unix.Catalog.GetString ("Runs pipe to current line only"), "gtk-media-record");
		this.RunToLineAction.Sensitive = false;
		this.RunToLineAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Run _To Line");
		w1.Add (this.RunToLineAction, "<Control>t");
		this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("_Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Help");
		w1.Add (this.HelpAction, null);
		this.UserGuideAction = new global::Gtk.Action ("UserGuideAction", global::Mono.Unix.Catalog.GetString ("_User Guide"), null, "gtk-help");
		this.UserGuideAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_User Guide");
		w1.Add (this.UserGuideAction, "F1");
		this.SupportForumAction = new global::Gtk.Action ("SupportForumAction", global::Mono.Unix.Catalog.GetString ("Support _Forum"), null, null);
		this.SupportForumAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Support _Forum");
		w1.Add (this.SupportForumAction, null);
		this.VisitOurHomepageAction = new global::Gtk.Action ("VisitOurHomepageAction", global::Mono.Unix.Catalog.GetString ("Visit Our Homepage"), null, "gtk-home");
		this.VisitOurHomepageAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Visit Our Homepage");
		w1.Add (this.VisitOurHomepageAction, null);
		this.AboutAction = new global::Gtk.Action ("AboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, "gtk-about");
		this.AboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
		w1.Add (this.AboutAction, null);
		this.QuickStartTutorialAction = new global::Gtk.Action ("QuickStartTutorialAction", global::Mono.Unix.Catalog.GetString ("Quick Start Tutorial"), global::Mono.Unix.Catalog.GetString ("Display quick start tutorial"), null);
		this.QuickStartTutorialAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quick Start Tutorial");
		w1.Add (this.QuickStartTutorialAction, null);
		this.FontAction = new global::Gtk.Action ("FontAction", global::Mono.Unix.Catalog.GetString ("_Font"), null, null);
		this.FontAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Font");
		w1.Add (this.FontAction, null);
		this.AppendStrAction = new global::Gtk.Action ("AppendStrAction", global::Mono.Unix.Catalog.GetString ("AppendStr"), null, "gtk-add");
		this.AppendStrAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("AppendStr");
		w1.Add (this.AppendStrAction, null);
		this.BottomLinesAction = new global::Gtk.Action ("BottomLinesAction", global::Mono.Unix.Catalog.GetString ("BottomLines"), null, "gtk-goto-bottom");
		this.BottomLinesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("BottomLines");
		w1.Add (this.BottomLinesAction, null);
		this.CallAction = new global::Gtk.Action ("CallAction", global::Mono.Unix.Catalog.GetString ("Call"), null, null);
		this.CallAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Call");
		w1.Add (this.CallAction, null);
		this.CountCharsAction = new global::Gtk.Action ("CountCharsAction", global::Mono.Unix.Catalog.GetString ("CountChars"), null, null);
		this.CountCharsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("CountChars");
		w1.Add (this.CountCharsAction, null);
		this.CountLinesAction = new global::Gtk.Action ("CountLinesAction", global::Mono.Unix.Catalog.GetString ("CountLines"), null, null);
		this.CountLinesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("CountLines");
		w1.Add (this.CountLinesAction, null);
		this.DelBlankLinesAction = new global::Gtk.Action ("DelBlankLinesAction", global::Mono.Unix.Catalog.GetString ("DelBlankLines"), null, null);
		this.DelBlankLinesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("DelBlankLines");
		w1.Add (this.DelBlankLinesAction, null);
		this.DelCharsAction = new global::Gtk.Action ("DelCharsAction", global::Mono.Unix.Catalog.GetString ("DelChars"), null, null);
		this.DelCharsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("DelChars");
		w1.Add (this.DelCharsAction, null);
		this.ExclLinesAction = new global::Gtk.Action ("ExclLinesAction", global::Mono.Unix.Catalog.GetString ("ExclLines"), null, null);
		this.ExclLinesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("ExclLines");
		w1.Add (this.ExclLinesAction, null);
		this.InclLinesAction = new global::Gtk.Action ("InclLinesAction", global::Mono.Unix.Catalog.GetString ("InclLines"), null, null);
		this.InclLinesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("InclLines");
		w1.Add (this.InclLinesAction, null);
		this.InsLineNoAction = new global::Gtk.Action ("InsLineNoAction", global::Mono.Unix.Catalog.GetString ("InsLineNo"), null, null);
		this.InsLineNoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("InsLineNo");
		w1.Add (this.InsLineNoAction, null);
		this.InsStrAction = new global::Gtk.Action ("InsStrAction", global::Mono.Unix.Catalog.GetString ("InsStr"), null, null);
		this.InsStrAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("InsStr");
		w1.Add (this.InsStrAction, null);
		this.WrapTextAction = new global::Gtk.ToggleAction ("WrapTextAction", global::Mono.Unix.Catalog.GetString ("_Wrap Text"), null, null);
		this.WrapTextAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Wrap Text");
		w1.Add (this.WrapTextAction, null);
		this.InsertCursorColAction = new global::Gtk.Action ("InsertCursorColAction", global::Mono.Unix.Catalog.GetString ("Insert Cursor Col"), null, "gtk-add");
		this.InsertCursorColAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Insert Cursor Col");
		w1.Add (this.InsertCursorColAction, null);
		this.DemosAction = new global::Gtk.Action ("DemosAction", global::Mono.Unix.Catalog.GetString ("_Demos"), null, null);
		this.DemosAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Demos");
		w1.Add (this.DemosAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("PipeWrench");
		this.Icon = global::Stetic.IconLoader.LoadIcon (this, "stock_standard-filter", global::Gtk.IconSize.Menu);
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='NewAction' action='NewAction'/><menuitem name='OpenAction' action='OpenAction'/><menuitem name='SaveAction' action='SaveAction'/><menuitem name='SaveAsAction' action='SaveAsAction'/><separator/><menuitem name='ImportAction' action='ImportAction'/><menuitem name='ExportAction' action='ExportAction'/><separator/><menuitem name='ExitAction' action='ExitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='CutAction' action='CutAction'/><menuitem name='CopyAction' action='CopyAction'/><menuitem name='PasteAction' action='PasteAction'/><menuitem name='DeleteAction' action='DeleteAction'/><menuitem name='SelectAllAction' action='SelectAllAction'/><separator/><menuitem name='InsertCursorColAction' action='InsertCursorColAction'/><separator/><menuitem name='PreferencesAction' action='PreferencesAction'/></menu><menu name='PipeAction' action='PipeAction'><menuitem name='RunAction' action='RunAction'/><menuitem name='RunToLineAction' action='RunToLineAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='UserGuideAction' action='UserGuideAction'/><menuitem name='DemosAction' action='DemosAction'/><separator/><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar1'><toolitem name='NewAction' action='NewAction'/><toolitem name='OpenAction' action='OpenAction'/><toolitem name='SaveAction' action='SaveAction'/><toolitem name='SaveAsAction' action='SaveAsAction'/><separator/><toolitem name='ImportAction' action='ImportAction'/><toolitem name='ExportAction' action='ExportAction'/><separator/><toolitem name='RunAction' action='RunAction'/><toolitem name='RunToLineAction' action='RunToLineAction'/></toolbar></ui>");
		this.toolbar1 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar1")));
		this.toolbar1.Name = "toolbar1";
		this.toolbar1.ShowArrow = false;
		this.toolbar1.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.toolbar1.IconSize = ((global::Gtk.IconSize)(3));
		this.vbox1.Add (this.toolbar1);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.toolbar1]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hpaned1 = new global::Gtk.HPaned ();
		this.hpaned1.CanFocus = true;
		this.hpaned1.Name = "hpaned1";
		this.hpaned1.Position = 178;
		// Container child hpaned1.Gtk.Paned+PanedChild
		this.CommandsFrame = new global::Gtk.Frame ();
		this.CommandsFrame.Name = "CommandsFrame";
		this.CommandsFrame.BorderWidth = ((uint)(3));
		// Container child CommandsFrame.Gtk.Container+ContainerChild
		this.GtkAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
		this.GtkAlignment.Name = "GtkAlignment";
		this.GtkAlignment.LeftPadding = ((uint)(6));
		this.GtkAlignment.TopPadding = ((uint)(6));
		this.GtkAlignment.RightPadding = ((uint)(6));
		this.GtkAlignment.BottomPadding = ((uint)(6));
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		this.scrolledwindow1 = new global::Gtk.ScrolledWindow ();
		this.scrolledwindow1.CanFocus = true;
		this.scrolledwindow1.Name = "scrolledwindow1";
		this.scrolledwindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child scrolledwindow1.Gtk.Container+ContainerChild
		global::Gtk.Viewport w4 = new global::Gtk.Viewport ();
		w4.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child GtkViewport.Gtk.Container+ContainerChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='CommandsToolbar'/></ui>");
		this.CommandsToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/CommandsToolbar")));
		this.CommandsToolbar.Name = "CommandsToolbar";
		this.CommandsToolbar.Orientation = ((global::Gtk.Orientation)(1));
		this.CommandsToolbar.ShowArrow = false;
		this.CommandsToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(3));
		this.CommandsToolbar.IconSize = ((global::Gtk.IconSize)(2));
		w4.Add (this.CommandsToolbar);
		this.scrolledwindow1.Add (w4);
		this.GtkAlignment.Add (this.scrolledwindow1);
		this.CommandsFrame.Add (this.GtkAlignment);
		this.GtkLabel6 = new global::Gtk.Label ();
		this.GtkLabel6.Name = "GtkLabel6";
		this.GtkLabel6.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Commands</b>");
		this.GtkLabel6.UseMarkup = true;
		this.CommandsFrame.LabelWidget = this.GtkLabel6;
		this.hpaned1.Add (this.CommandsFrame);
		global::Gtk.Paned.PanedChild w9 = ((global::Gtk.Paned.PanedChild)(this.hpaned1 [this.CommandsFrame]));
		w9.Resize = false;
		// Container child hpaned1.Gtk.Paned+PanedChild
		this.vpaned1 = new global::Gtk.VPaned ();
		this.vpaned1.CanFocus = true;
		this.vpaned1.Name = "vpaned1";
		this.vpaned1.Position = 156;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.PipeFrame = new global::Gtk.Frame ();
		this.PipeFrame.Name = "PipeFrame";
		this.PipeFrame.BorderWidth = ((uint)(3));
		// Container child PipeFrame.Gtk.Container+ContainerChild
		this.GtkAlignment2 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
		this.GtkAlignment2.Name = "GtkAlignment2";
		this.GtkAlignment2.LeftPadding = ((uint)(6));
		this.GtkAlignment2.TopPadding = ((uint)(6));
		this.GtkAlignment2.RightPadding = ((uint)(6));
		this.GtkAlignment2.BottomPadding = ((uint)(6));
		// Container child GtkAlignment2.Gtk.Container+ContainerChild
		this.vbox3 = new global::Gtk.VBox ();
		this.vbox3.Name = "vbox3";
		this.vbox3.Spacing = 6;
		// Container child vbox3.Gtk.Box+BoxChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.PipeTextView = new global::Gtk.TextView ();
		this.PipeTextView.TooltipMarkup = "Enter pipe commands here";
		this.PipeTextView.CanFocus = true;
		this.PipeTextView.Name = "PipeTextView";
		this.PipeTextView.AcceptsTab = false;
		this.PipeTextView.RightMargin = 3;
		this.GtkScrolledWindow.Add (this.PipeTextView);
		this.vbox3.Add (this.GtkScrolledWindow);
		global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.GtkScrolledWindow]));
		w11.Position = 0;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox1 = new global::Gtk.HBox ();
		this.hbox1.Name = "hbox1";
		this.hbox1.Spacing = 6;
		// Container child hbox1.Gtk.Box+BoxChild
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Arguments");
		this.hbox1.Add (this.label1);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.label1]));
		w12.Position = 0;
		w12.Expand = false;
		w12.Fill = false;
		// Container child hbox1.Gtk.Box+BoxChild
		this.ArgsEntry = new global::Gtk.Entry ();
		this.ArgsEntry.TooltipMarkup = "Enter any pipe arguments here";
		this.ArgsEntry.CanFocus = true;
		this.ArgsEntry.Name = "ArgsEntry";
		this.ArgsEntry.IsEditable = true;
		this.ArgsEntry.InvisibleChar = '●';
		this.hbox1.Add (this.ArgsEntry);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.ArgsEntry]));
		w13.Position = 1;
		this.vbox3.Add (this.hbox1);
		global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.hbox1]));
		w14.Position = 1;
		w14.Expand = false;
		w14.Fill = false;
		this.GtkAlignment2.Add (this.vbox3);
		this.PipeFrame.Add (this.GtkAlignment2);
		this.GtkLabel10 = new global::Gtk.Label ();
		this.GtkLabel10.Name = "GtkLabel10";
		this.GtkLabel10.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Pipe</b>");
		this.GtkLabel10.UseMarkup = true;
		this.PipeFrame.LabelWidget = this.GtkLabel10;
		this.vpaned1.Add (this.PipeFrame);
		global::Gtk.Paned.PanedChild w17 = ((global::Gtk.Paned.PanedChild)(this.vpaned1 [this.PipeFrame]));
		w17.Resize = false;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.TextFrame = new global::Gtk.Frame ();
		this.TextFrame.Name = "TextFrame";
		this.TextFrame.BorderWidth = ((uint)(3));
		// Container child TextFrame.Gtk.Container+ContainerChild
		this.GtkAlignment1 = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
		this.GtkAlignment1.Name = "GtkAlignment1";
		this.GtkAlignment1.LeftPadding = ((uint)(6));
		this.GtkAlignment1.TopPadding = ((uint)(6));
		this.GtkAlignment1.RightPadding = ((uint)(6));
		this.GtkAlignment1.BottomPadding = ((uint)(6));
		// Container child GtkAlignment1.Gtk.Container+ContainerChild
		this.TextNotebook = new global::Gtk.Notebook ();
		this.TextNotebook.CanFocus = true;
		this.TextNotebook.Name = "TextNotebook";
		this.TextNotebook.CurrentPage = 1;
		// Container child TextNotebook.Gtk.Notebook+NotebookChild
		this.vbox2 = new global::Gtk.VBox ();
		this.vbox2.Name = "vbox2";
		this.vbox2.Spacing = 6;
		// Container child vbox2.Gtk.Box+BoxChild
		this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
		this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
		this.InputTextView = new global::Gtk.TextView ();
		this.InputTextView.Buffer.Text = "replace this text\nwith the text you\nwant to edit.";
		this.InputTextView.TooltipMarkup = "Copy the text to process here";
		this.InputTextView.CanFocus = true;
		this.InputTextView.Name = "InputTextView";
		this.InputTextView.AcceptsTab = false;
		this.InputTextView.RightMargin = 3;
		this.GtkScrolledWindow1.Add (this.InputTextView);
		this.vbox2.Add (this.GtkScrolledWindow1);
		global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.GtkScrolledWindow1]));
		w19.Position = 0;
		// Container child vbox2.Gtk.Box+BoxChild
		this.hbox2 = new global::Gtk.HBox ();
		this.hbox2.Name = "hbox2";
		this.hbox2.Spacing = 6;
		// Container child hbox2.Gtk.Box+BoxChild
		this.label2 = new global::Gtk.Label ();
		this.label2.Name = "label2";
		this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("File");
		this.hbox2.Add (this.label2);
		global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.label2]));
		w20.Position = 0;
		w20.Expand = false;
		w20.Fill = false;
		// Container child hbox2.Gtk.Box+BoxChild
		this.InputFileEntry = new global::Gtk.Entry ();
		this.InputFileEntry.TooltipMarkup = "Use browse button to select input text file";
		this.InputFileEntry.CanFocus = true;
		this.InputFileEntry.Name = "InputFileEntry";
		this.InputFileEntry.IsEditable = false;
		this.InputFileEntry.InvisibleChar = '●';
		this.hbox2.Add (this.InputFileEntry);
		global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.InputFileEntry]));
		w21.Position = 1;
		// Container child hbox2.Gtk.Box+BoxChild
		this.InputFileBrowseButton = new global::Gtk.Button ();
		this.InputFileBrowseButton.TooltipMarkup = "Browse for input text file";
		this.InputFileBrowseButton.CanFocus = true;
		this.InputFileBrowseButton.Name = "InputFileBrowseButton";
		this.InputFileBrowseButton.UseUnderline = true;
		this.InputFileBrowseButton.Label = global::Mono.Unix.Catalog.GetString ("...");
		this.hbox2.Add (this.InputFileBrowseButton);
		global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.InputFileBrowseButton]));
		w22.Position = 2;
		w22.Expand = false;
		w22.Fill = false;
		// Container child hbox2.Gtk.Box+BoxChild
		this.InputFileClearButton = new global::Gtk.Button ();
		this.InputFileClearButton.TooltipMarkup = "Clear input text file";
		this.InputFileClearButton.CanFocus = true;
		this.InputFileClearButton.Name = "InputFileClearButton";
		this.InputFileClearButton.UseUnderline = true;
		this.InputFileClearButton.Label = global::Mono.Unix.Catalog.GetString ("Clear");
		this.hbox2.Add (this.InputFileClearButton);
		global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.InputFileClearButton]));
		w23.Position = 3;
		w23.Expand = false;
		w23.Fill = false;
		this.vbox2.Add (this.hbox2);
		global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox2]));
		w24.Position = 1;
		w24.Expand = false;
		w24.Fill = false;
		this.TextNotebook.Add (this.vbox2);
		// Container child TextNotebook.Gtk.Notebook+NotebookChild
		this.vbox4 = new global::Gtk.VBox ();
		this.vbox4.Name = "vbox4";
		this.vbox4.Spacing = 6;
		// Container child vbox4.Gtk.Box+BoxChild
		this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
		this.GtkScrolledWindow2.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
		this.OutputTextView = new global::Gtk.TextView ();
		this.OutputTextView.TooltipMarkup = "Edited text is output here";
		this.OutputTextView.CanFocus = true;
		this.OutputTextView.Name = "OutputTextView";
		this.OutputTextView.AcceptsTab = false;
		this.OutputTextView.RightMargin = 3;
		this.GtkScrolledWindow2.Add (this.OutputTextView);
		this.vbox4.Add (this.GtkScrolledWindow2);
		global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.GtkScrolledWindow2]));
		w27.Position = 0;
		// Container child vbox4.Gtk.Box+BoxChild
		this.hbox3 = new global::Gtk.HBox ();
		this.hbox3.Name = "hbox3";
		this.hbox3.Spacing = 6;
		// Container child hbox3.Gtk.Box+BoxChild
		this.label3 = new global::Gtk.Label ();
		this.label3.Name = "label3";
		this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("File");
		this.hbox3.Add (this.label3);
		global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.label3]));
		w28.Position = 0;
		w28.Expand = false;
		w28.Fill = false;
		// Container child hbox3.Gtk.Box+BoxChild
		this.OutputFileEntry = new global::Gtk.Entry ();
		this.OutputFileEntry.TooltipMarkup = "Use browse button to select output text file";
		this.OutputFileEntry.CanFocus = true;
		this.OutputFileEntry.Name = "OutputFileEntry";
		this.OutputFileEntry.IsEditable = false;
		this.OutputFileEntry.InvisibleChar = '●';
		this.hbox3.Add (this.OutputFileEntry);
		global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.OutputFileEntry]));
		w29.Position = 1;
		// Container child hbox3.Gtk.Box+BoxChild
		this.OutputFileBrowseButton = new global::Gtk.Button ();
		this.OutputFileBrowseButton.TooltipMarkup = "Browse for output text file";
		this.OutputFileBrowseButton.CanFocus = true;
		this.OutputFileBrowseButton.Name = "OutputFileBrowseButton";
		this.OutputFileBrowseButton.UseUnderline = true;
		this.OutputFileBrowseButton.Label = global::Mono.Unix.Catalog.GetString ("...");
		this.hbox3.Add (this.OutputFileBrowseButton);
		global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.OutputFileBrowseButton]));
		w30.Position = 2;
		w30.Expand = false;
		w30.Fill = false;
		// Container child hbox3.Gtk.Box+BoxChild
		this.OutputFileClearButton = new global::Gtk.Button ();
		this.OutputFileClearButton.TooltipMarkup = "Clear output text file";
		this.OutputFileClearButton.CanFocus = true;
		this.OutputFileClearButton.Name = "OutputFileClearButton";
		this.OutputFileClearButton.UseUnderline = true;
		this.OutputFileClearButton.Label = global::Mono.Unix.Catalog.GetString ("Clear");
		this.hbox3.Add (this.OutputFileClearButton);
		global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.OutputFileClearButton]));
		w31.Position = 3;
		w31.Expand = false;
		w31.Fill = false;
		this.vbox4.Add (this.hbox3);
		global::Gtk.Box.BoxChild w32 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hbox3]));
		w32.Position = 1;
		w32.Expand = false;
		w32.Fill = false;
		this.TextNotebook.Add (this.vbox4);
		global::Gtk.Notebook.NotebookChild w33 = ((global::Gtk.Notebook.NotebookChild)(this.TextNotebook [this.vbox4]));
		w33.Position = 1;
		// Container child TextNotebook.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindow3 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow3.Name = "GtkScrolledWindow3";
		this.GtkScrolledWindow3.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow3.Gtk.Container+ContainerChild
		this.ErrorsTextView = new global::Gtk.TextView ();
		this.ErrorsTextView.TooltipMarkup = "Errors are reported here";
		this.ErrorsTextView.CanFocus = true;
		this.ErrorsTextView.Name = "ErrorsTextView";
		this.ErrorsTextView.Editable = false;
		this.ErrorsTextView.AcceptsTab = false;
		this.ErrorsTextView.RightMargin = 3;
		this.GtkScrolledWindow3.Add (this.ErrorsTextView);
		this.TextNotebook.Add (this.GtkScrolledWindow3);
		global::Gtk.Notebook.NotebookChild w35 = ((global::Gtk.Notebook.NotebookChild)(this.TextNotebook [this.GtkScrolledWindow3]));
		w35.Position = 2;
		this.GtkAlignment1.Add (this.TextNotebook);
		this.TextFrame.Add (this.GtkAlignment1);
		this.GtkLabel14 = new global::Gtk.Label ();
		this.GtkLabel14.Name = "GtkLabel14";
		this.GtkLabel14.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Text</b>");
		this.GtkLabel14.UseMarkup = true;
		this.TextFrame.LabelWidget = this.GtkLabel14;
		this.vpaned1.Add (this.TextFrame);
		this.hpaned1.Add (this.vpaned1);
		this.vbox1.Add (this.hpaned1);
		global::Gtk.Box.BoxChild w40 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hpaned1]));
		w40.Position = 2;
		// Container child vbox1.Gtk.Box+BoxChild
		this.TheStatusBar = new global::Gtk.Statusbar ();
		this.TheStatusBar.Name = "TheStatusBar";
		this.TheStatusBar.Spacing = 6;
		// Container child TheStatusBar.Gtk.Box+BoxChild
		this.StatusBarCursorPosLabel = new global::Gtk.Label ();
		this.StatusBarCursorPosLabel.Name = "StatusBarCursorPosLabel";
		this.StatusBarCursorPosLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("(0, 0)");
		this.TheStatusBar.Add (this.StatusBarCursorPosLabel);
		global::Gtk.Box.BoxChild w41 = ((global::Gtk.Box.BoxChild)(this.TheStatusBar [this.StatusBarCursorPosLabel]));
		w41.Position = 0;
		w41.Expand = false;
		w41.Fill = false;
		w41.Padding = ((uint)(4));
		// Container child TheStatusBar.Gtk.Box+BoxChild
		this.vseparator1 = new global::Gtk.VSeparator ();
		this.vseparator1.Name = "vseparator1";
		this.TheStatusBar.Add (this.vseparator1);
		global::Gtk.Box.BoxChild w42 = ((global::Gtk.Box.BoxChild)(this.TheStatusBar [this.vseparator1]));
		w42.Position = 1;
		w42.Expand = false;
		w42.Fill = false;
		// Container child TheStatusBar.Gtk.Box+BoxChild
		this.StatusBarTextLabel = new global::Gtk.Label ();
		this.StatusBarTextLabel.Name = "StatusBarTextLabel";
		this.StatusBarTextLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("    ");
		this.TheStatusBar.Add (this.StatusBarTextLabel);
		global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.TheStatusBar [this.StatusBarTextLabel]));
		w43.Position = 2;
		w43.Expand = false;
		w43.Fill = false;
		w43.Padding = ((uint)(4));
		this.vbox1.Add (this.TheStatusBar);
		global::Gtk.Box.BoxChild w44 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.TheStatusBar]));
		w44.Position = 3;
		w44.Expand = false;
		w44.Fill = false;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 488;
		this.DefaultHeight = 458;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.NewAction.Activated += new global::System.EventHandler (this.NewAction_OnActivated);
		this.OpenAction.Activated += new global::System.EventHandler (this.OpenAction_OnActivated);
		this.SaveAction.Activated += new global::System.EventHandler (this.SaveAction_OnActivated);
		this.SaveAsAction.Activated += new global::System.EventHandler (this.SaveAsAction_OnActivated);
		this.ImportAction.Activated += new global::System.EventHandler (this.ImportAction_OnActivated);
		this.ExportAction.Activated += new global::System.EventHandler (this.ExportAction_OnActivated);
		this.ExitAction.Activated += new global::System.EventHandler (this.OnExit);
		this.CutAction.Activated += new global::System.EventHandler (this.Cut_OnActivated);
		this.CopyAction.Activated += new global::System.EventHandler (this.Copy_OnActivated);
		this.PasteAction.Activated += new global::System.EventHandler (this.Paste_OnActivated);
		this.DeleteAction.Activated += new global::System.EventHandler (this.Delete_OnActivated);
		this.SelectAllAction.Activated += new global::System.EventHandler (this.SelectAll_OnActivated);
		this.PreferencesAction.Activated += new global::System.EventHandler (this.Preferences_OnActivated);
		this.RunAction.Activated += new global::System.EventHandler (this.RunAction_OnActivated);
		this.RunToLineAction.Activated += new global::System.EventHandler (this.RunToLineAction_OnActivated);
		this.UserGuideAction.Activated += new global::System.EventHandler (this.UserGuide_OnActivated);
		this.AboutAction.Activated += new global::System.EventHandler (this.About_OnActivated);
		this.InsertCursorColAction.Activated += new global::System.EventHandler (this.InsertCursorCol_OnActivated);
		this.DemosAction.Activated += new global::System.EventHandler (this.Demos_OnActivated);
		this.PipeTextView.MoveCursor += new global::Gtk.MoveCursorHandler (this.TextView_OnMoveCursor);
		this.PipeTextView.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler (this.TextView_OnButtonReleaseEvent);
		this.PipeTextView.Focused += new global::Gtk.FocusedHandler (this.TextView_OnFocused);
		this.PipeTextView.KeyReleaseEvent += new global::Gtk.KeyReleaseEventHandler (this.PipeTextView_OnKeyReleaseEvent);
		this.InputTextView.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler (this.TextView_OnButtonReleaseEvent);
		this.InputTextView.MoveCursor += new global::Gtk.MoveCursorHandler (this.TextView_OnMoveCursor);
		this.InputTextView.Focused += new global::Gtk.FocusedHandler (this.TextView_OnFocused);
		this.InputFileEntry.Changed += new global::System.EventHandler (this.InputFileEntry_OnChanged);
		this.InputFileBrowseButton.Clicked += new global::System.EventHandler (this.InputFileBrowseButton_OnClicked);
		this.InputFileClearButton.Clicked += new global::System.EventHandler (this.InputFileClearButton_Clicked);
		this.OutputTextView.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler (this.TextView_OnButtonReleaseEvent);
		this.OutputTextView.MoveCursor += new global::Gtk.MoveCursorHandler (this.TextView_OnMoveCursor);
		this.OutputTextView.Focused += new global::Gtk.FocusedHandler (this.TextView_OnFocused);
		this.OutputFileEntry.Changed += new global::System.EventHandler (this.OutputFileEntry_OnChanged);
		this.OutputFileBrowseButton.Clicked += new global::System.EventHandler (this.OutputFileBrowseButton_OnClicked);
		this.OutputFileClearButton.Clicked += new global::System.EventHandler (this.OutputFileClearButton_Clicked);
	}
}
